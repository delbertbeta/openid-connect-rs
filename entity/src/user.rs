//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub username: String,
    pub email: Option<String>,
    pub face_url: Option<String>,
    pub nickname: String,
    pub password_hash: String,
    pub self_info: Option<String>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::rsa::Entity")]
    Rsa,
}

impl Related<super::rsa::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Rsa.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
